import Head from "next/head";
import BlogPreviewList from "../components/Blog/BlogPreviewList";
import getFileNames from "utils/getFileNames";
import readBlogFiles from "utils/readBlogFiles";
import matter from "gray-matter";
import readingTime from "reading-time";
import connectDb from "../mongoose/connectDb";
import Blog from "mongoose/models/Blog";

// top ,recent 둘 다 똑같은 내용인데 정렬만 다른 것인데.. 왜 둘 다 받지?
export default function Home({ topBlogs, recentBlogs }) {
  return (
    <div>
      <Head>
        <title>Suwan blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <BlogPreviewList header="Top Blogs" blogs={topBlogs} />
      <BlogPreviewList header="Recent Blogs" blogs={recentBlogs} />
    </div>
  );
}

export const getStaticProps = async () => {
  await connectDb();

  const fileNames = getFileNames();

  const allParsedData = fileNames.map((fileName) => {
    const slug = fileName.replace(".mdx", "");

    const parsedFile = readBlogFiles(fileName);

    const { data, content } = matter(parsedFile);

    data.readingTime = readingTime(content).text;
    data.slug = slug;
    data.content = content;

    return data;
  });

  const blogBulkUpdateArray = allParsedData.map((blog) => ({
    updateOne: {
      filter: {
        customID: blog.customID,
      },
      update: {
        $set: blog,
      },
      upsert: true,
      setDefaultOnInsert: true,
    },
  }));
  // 이거 하니까 blogs에 있는 내용들이 mongdb에 저장됨.. 그리고 public에도 배너 이미지 저장된
  await Blog.bulkWrite(blogBulkUpdateArray);

  const project = {
    _id: 0,
    _v: 0,
    content: 0,
  };

  const limit = 10;
  // Blog.find로 mongodb collection data를 객체 형식을 받는다. 그리고 sort 순으로 정리된다.
  const topBlogsResult = await Blog.find({}, project)
    .sort("-totalViews")
    .limit(limit);

  const recentBlogsResult = await Blog.find({}, project)
    .sort("-createdAt")
    .limit(limit);

  // 2022-04-19T19:49:53.601Z 이렇게 표시되는 시간을 => Wed Apr 20 2022 이렇게 바꾸기 위함
  const topBlogs = topBlogsResult.map((blog) => {
    const blogObject = blog.toObject();
    blogObject.createdAt = blogObject.createdAt.toDateString();
    return blogObject;
  });

  const recentBlogs = recentBlogsResult.map((blog) => {
    const blogObject = blog.toObject();
    blogObject.createdAt = blogObject.createdAt.toDateString();
    return blogObject;
  });

  return {
    props: { topBlogs, recentBlogs },
  };
};
